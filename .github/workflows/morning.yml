name: Morning TimeTree → LINE
on:
  schedule:
    # 毎朝 10:00 JST（= 1:00 UTC）
    - cron: "0 1 * * *"
  workflow_dispatch:
    inputs:
      test_message:
        description: "任意のテスト文言（指定時はICSを無視して送信）"
        required: false
        type: string
      dump:
        description: "ダンプ表示（送信せずICSの解析結果を出力）"
        required: false
        type: boolean

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: pip install -r requirements.txt

      - name: Export TimeTree to ICS
        env:
          TIMETREE_EMAIL: ${{ secrets.TIMETREE_EMAIL }}
          TIMETREE_PASSWORD: ${{ secrets.TIMETREE_PASSWORD }}
          TIMETREE_CAL_CODE: ${{ secrets.TIMETREE_CAL_CODE }} # 任意
        run: |
          mkdir -p data
          if [ -n "${TIMETREE_CAL_CODE}" ]; then
            timetree-exporter -o data/timetree.ics -e "${TIMETREE_EMAIL}" -c "${TIMETREE_CAL_CODE}" <<< "${TIMETREE_PASSWORD}"
          else
            timetree-exporter -o data/timetree.ics -e "${TIMETREE_EMAIL}" <<< "${TIMETREE_PASSWORD}"
          fi

      - name: Debug ICS head
        run: |
          ls -l data || true
          head -n 40 data/timetree.ics || true

      - name: Send LINE message
        env:
          LINE_CHANNEL_ACCESS_TOKEN: ${{ secrets.LINE_CHANNEL_ACCESS_TOKEN }}
          LINE_TO: ${{ secrets.LINE_TO }}
          USE_BROADCAST: ${{ secrets.USE_BROADCAST }}
          SHOW_MEMO: ${{ secrets.SHOW_MEMO }}
          SHOW_LINKS: ${{ secrets.SHOW_LINKS }}
          MEMO_MAX: ${{ secrets.MEMO_MAX }}
          TEST_MESSAGE: ${{ github.event.inputs.test_message }}
          DUMP: ${{ github.event.inputs.dump }}
        run: |
          if [ "${DUMP}" = "true" ]; then
            echo "### TimeTree dump (先頭200行)" >> "$GITHUB_STEP_SUMMARY"
            python scripts/notify_today.py --dump | tee dump.csv
            head -n 200 dump.csv >> "$GITHUB_STEP_SUMMARY"
          elif [ -n "${TEST_MESSAGE}" ]; then
            python scripts/notify_today.py --test "${TEST_MESSAGE}"
          else
            python scripts/notify_today.py
          fi

      - name: Upload ICS artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: timetree-ics
          path: data/timetree.ics
          if-no-files-found: warn
